<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="310" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="293.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="293.00"> </text><g id="frames"><g><title>__init__ (visualizer/visualizerGraphicItem.py:670) (62 samples, 0.11%)</title><rect x="12" y="244" width="1" height="15" fill="rgb(251,64,53)"/><text x="15.00" y="254.50"></text></g><g><title>create_item (visualizer/model.py:290) (100 samples, 0.18%)</title><rect x="12" y="228" width="2" height="15" fill="rgb(223,165,49)"/><text x="15.00" y="238.50"></text></g><g><title>__init__ (visualizer/visualizerGraphicItem.py:143) (118 samples, 0.21%)</title><rect x="16" y="260" width="2" height="15" fill="rgb(206,215,2)"/><text x="19.00" y="270.50"></text></g><g><title>__init__ (visualizer/visualizerGraphicItem.py:1017) (197 samples, 0.35%)</title><rect x="14" y="244" width="4" height="15" fill="rgb(254,25,24)"/><text x="17.00" y="254.50"></text></g><g><title>create_item (visualizer/model.py:296) (382 samples, 0.68%)</title><rect x="14" y="228" width="8" height="15" fill="rgb(240,58,43)"/><text x="17.00" y="238.50"></text></g><g><title>create_item (visualizer/model.py:305) (65 samples, 0.12%)</title><rect x="22" y="228" width="1" height="15" fill="rgb(213,155,19)"/><text x="25.00" y="238.50"></text></g><g><title>add_item (visualizer/model.py:69) (62 samples, 0.11%)</title><rect x="22" y="244" width="1" height="15" fill="rgb(232,51,17)"/><text x="25.00" y="254.50"></text></g><g><title>_on_init_atom (visualizer/parser.py:101) (600 samples, 1.06%)</title><rect x="11" y="196" width="12" height="15" fill="rgb(240,204,7)"/><text x="14.00" y="206.50"></text></g><g><title>get_item (visualizer/model.py:548) (554 samples, 0.98%)</title><rect x="12" y="212" width="11" height="15" fill="rgb(214,157,7)"/><text x="15.00" y="222.50"></text></g><g><title>_on_init_atom (visualizer/parser.py:104) (52 samples, 0.09%)</title><rect x="23" y="196" width="1" height="15" fill="rgb(223,214,15)"/><text x="26.00" y="206.50"></text></g><g><title>add_node (visualizer/model.py:153) (4,293 samples, 7.62%)</title><rect x="25" y="212" width="90" height="15" fill="rgb(207,198,21)"/><text x="28.00" y="222.50">add_node (..</text></g><g><title>_on_init_atom (visualizer/parser.py:110) (4,323 samples, 7.67%)</title><rect x="25" y="196" width="90" height="15" fill="rgb(210,172,29)"/><text x="28.00" y="206.50">_on_init_a..</text></g><g><title>_on_init_atom (visualizer/parser.py:96) (49 samples, 0.09%)</title><rect x="116" y="196" width="1" height="15" fill="rgb(220,155,19)"/><text x="119.00" y="206.50"></text></g><g><title>on_model (visualizer/parser.py:54) (5,218 samples, 9.26%)</title><rect x="10" y="164" width="109" height="15" fill="rgb(221,88,13)"/><text x="13.00" y="174.50">on_model (vis..</text></g><g><title>on_atom (visualizer/parser.py:69) (5,167 samples, 9.17%)</title><rect x="11" y="180" width="108" height="15" fill="rgb(212,162,14)"/><text x="14.00" y="190.50">on_atom (visu..</text></g><g><title>_on_init_atom (visualizer/parser.py:99) (49 samples, 0.09%)</title><rect x="118" y="196" width="1" height="15" fill="rgb(214,156,38)"/><text x="121.00" y="206.50"></text></g><g><title>update (visualizer/gui.py:1467) (290 samples, 0.51%)</title><rect x="119" y="212" width="7" height="15" fill="rgb(217,169,37)"/><text x="122.00" y="222.50"></text></g><g><title>update (visualizer/gui.py:1470) (390 samples, 0.69%)</title><rect x="127" y="212" width="8" height="15" fill="rgb(230,172,27)"/><text x="130.00" y="222.50"></text></g><g><title>update (visualizer/gui.py:1473) (11,275 samples, 20.01%)</title><rect x="135" y="212" width="236" height="15" fill="rgb(233,213,43)"/><text x="138.00" y="222.50">update (visualizer/gui.py:1473)</text></g><g><title>update (visualizer/gui.py:1474) (595 samples, 1.06%)</title><rect x="371" y="212" width="13" height="15" fill="rgb(219,66,53)"/><text x="374.00" y="222.50"></text></g><g><title>update (visualizer/gui.py:1475) (50 samples, 0.09%)</title><rect x="384" y="212" width="1" height="15" fill="rgb(253,173,16)"/><text x="387.00" y="222.50"></text></g><g><title>update (visualizer/gui.py:1476) (69 samples, 0.12%)</title><rect x="385" y="212" width="1" height="15" fill="rgb(208,211,22)"/><text x="388.00" y="222.50"></text></g><g><title>update (visualizer/gui.py:1478) (214 samples, 0.38%)</title><rect x="386" y="212" width="5" height="15" fill="rgb(234,116,6)"/><text x="389.00" y="222.50"></text></g><g><title>update (visualizer/gui.py:1658) (101 samples, 0.18%)</title><rect x="393" y="212" width="2" height="15" fill="rgb(244,163,48)"/><text x="396.00" y="222.50"></text></g><g><title>update (visualizer/gui.py:1659) (139 samples, 0.25%)</title><rect x="395" y="212" width="3" height="15" fill="rgb(238,148,35)"/><text x="398.00" y="222.50"></text></g><g><title>update (visualizer/gui.py:1660) (102 samples, 0.18%)</title><rect x="398" y="212" width="2" height="15" fill="rgb(208,192,3)"/><text x="401.00" y="222.50"></text></g><g><title>update (visualizer/gui.py:1661) (106 samples, 0.19%)</title><rect x="400" y="212" width="2" height="15" fill="rgb(254,110,38)"/><text x="403.00" y="222.50"></text></g><g><title>set_item_text (visualizer/gui.py:1705) (75 samples, 0.13%)</title><rect x="403" y="228" width="2" height="15" fill="rgb(237,46,8)"/><text x="406.00" y="238.50"></text></g><g><title>update (visualizer/gui.py:1662) (149 samples, 0.26%)</title><rect x="402" y="212" width="3" height="15" fill="rgb(223,168,30)"/><text x="405.00" y="222.50"></text></g><g><title>update (visualizer/gui.py:1666) (105 samples, 0.19%)</title><rect x="405" y="212" width="2" height="15" fill="rgb(248,179,20)"/><text x="408.00" y="222.50"></text></g><g><title>update (visualizer/gui.py:1670) (86 samples, 0.15%)</title><rect x="407" y="212" width="2" height="15" fill="rgb(248,145,12)"/><text x="410.00" y="222.50"></text></g><g><title>update (visualizer/gui.py:1674) (106 samples, 0.19%)</title><rect x="409" y="212" width="3" height="15" fill="rgb(253,185,44)"/><text x="412.00" y="222.50"></text></g><g><title>update (visualizer/gui.py:1675) (130 samples, 0.23%)</title><rect x="412" y="212" width="2" height="15" fill="rgb(205,169,8)"/><text x="415.00" y="222.50"></text></g><g><title>update (visualizer/gui.py:1676) (129 samples, 0.23%)</title><rect x="414" y="212" width="3" height="15" fill="rgb(239,45,39)"/><text x="417.00" y="222.50"></text></g><g><title>update (visualizer/modelView.py:371) (86 samples, 0.15%)</title><rect x="418" y="212" width="2" height="15" fill="rgb(235,76,27)"/><text x="421.00" y="222.50"></text></g><g><title>update (visualizer/modelView.py:373) (77 samples, 0.14%)</title><rect x="420" y="212" width="1" height="15" fill="rgb(215,182,30)"/><text x="423.00" y="222.50"></text></g><g><title>set_rect (visualizer/visualizerGraphicItem.py:1091) (669 samples, 1.19%)</title><rect x="426" y="228" width="14" height="15" fill="rgb(253,181,42)"/><text x="429.00" y="238.50"></text></g><g><title>set_rect (visualizer/visualizerGraphicItem.py:1092) (51 samples, 0.09%)</title><rect x="440" y="228" width="1" height="15" fill="rgb(216,14,17)"/><text x="443.00" y="238.50"></text></g><g><title>set_rect (visualizer/visualizerGraphicItem.py:1093) (72 samples, 0.13%)</title><rect x="441" y="228" width="1" height="15" fill="rgb(225,141,5)"/><text x="444.00" y="238.50"></text></g><g><title>set_rect (visualizer/visualizerGraphicItem.py:1100) (440 samples, 0.78%)</title><rect x="443" y="228" width="9" height="15" fill="rgb(244,194,19)"/><text x="446.00" y="238.50"></text></g><g><title>set_rect (visualizer/visualizerGraphicItem.py:545) (219 samples, 0.39%)</title><rect x="454" y="228" width="5" height="15" fill="rgb(227,130,5)"/><text x="457.00" y="238.50"></text></g><g><title>set_rect (visualizer/visualizerGraphicItem.py:555) (144 samples, 0.26%)</title><rect x="459" y="228" width="3" height="15" fill="rgb(222,75,13)"/><text x="462.00" y="238.50"></text></g><g><title>set_rect (visualizer/visualizerGraphicItem.py:693) (263 samples, 0.47%)</title><rect x="463" y="228" width="5" height="15" fill="rgb(236,53,34)"/><text x="466.00" y="238.50"></text></g><g><title>set_rect (visualizer/visualizerGraphicItem.py:702) (153 samples, 0.27%)</title><rect x="469" y="228" width="3" height="15" fill="rgb(250,159,48)"/><text x="472.00" y="238.50"></text></g><g><title>update (visualizer/modelView.py:439) (2,313 samples, 4.11%)</title><rect x="425" y="212" width="48" height="15" fill="rgb(212,47,52)"/><text x="428.00" y="222.50">upda..</text></g><g><title>determine_color (visualizer/visualizerGraphicItem.py:1692) (100 samples, 0.18%)</title><rect x="473" y="228" width="2" height="15" fill="rgb(218,110,43)"/><text x="476.00" y="238.50"></text></g><g><title>update (visualizer/modelView.py:440) (223 samples, 0.40%)</title><rect x="473" y="212" width="5" height="15" fill="rgb(234,14,38)"/><text x="476.00" y="222.50"></text></g><g><title>update (visualizer/modelView.py:471) (128 samples, 0.23%)</title><rect x="478" y="212" width="2" height="15" fill="rgb(250,198,50)"/><text x="481.00" y="222.50"></text></g><g><title>done_instance (visualizer/parser.py:137) (17,285 samples, 30.68%)</title><rect x="119" y="180" width="362" height="15" fill="rgb(238,17,21)"/><text x="122.00" y="190.50">done_instance (visualizer/parser.py:137)</text></g><g><title>update_windows (visualizer/model.py:467) (17,285 samples, 30.68%)</title><rect x="119" y="196" width="362" height="15" fill="rgb(248,217,18)"/><text x="122.00" y="206.50">update_windows (visualizer/model.py:467)</text></g><g><title>_init_gui (visualizer/control.py:169) (22,622 samples, 40.15%)</title><rect x="10" y="116" width="473" height="15" fill="rgb(208,145,9)"/><text x="13.00" y="126.50">_init_gui (visualizer/control.py:169)</text></g><g><title>parse_file (visualizer/parser.py:237) (22,622 samples, 40.15%)</title><rect x="10" y="132" width="473" height="15" fill="rgb(216,124,23)"/><text x="13.00" y="142.50">parse_file (visualizer/parser.py:237)</text></g><g><title>parse (visualizer/parser.py:210) (22,622 samples, 40.15%)</title><rect x="10" y="148" width="473" height="15" fill="rgb(245,101,44)"/><text x="13.00" y="158.50">parse (visualizer/parser.py:210)</text></g><g><title>on_model (visualizer/parser.py:56) (17,404 samples, 30.89%)</title><rect x="119" y="164" width="364" height="15" fill="rgb(208,177,24)"/><text x="122.00" y="174.50">on_model (visualizer/parser.py:56)</text></g><g><title>done_instance (visualizer/parser.py:149) (119 samples, 0.21%)</title><rect x="481" y="180" width="2" height="15" fill="rgb(210,100,30)"/><text x="484.00" y="190.50"></text></g><g><title>update (visualizer/gui.py:1417) (119 samples, 0.21%)</title><rect x="481" y="196" width="2" height="15" fill="rgb(226,136,26)"/><text x="484.00" y="206.50"></text></g><g><title>update (visualizer/modelView.py:371) (55 samples, 0.10%)</title><rect x="484" y="164" width="1" height="15" fill="rgb(242,195,21)"/><text x="487.00" y="174.50"></text></g><g><title>clear (visualizer/modelView.py:353) (130 samples, 0.23%)</title><rect x="486" y="180" width="3" height="15" fill="rgb(234,54,30)"/><text x="489.00" y="190.50"></text></g><g><title>clear (visualizer/modelView.py:354) (30,891 samples, 54.83%)</title><rect x="489" y="180" width="646" height="15" fill="rgb(240,39,5)"/><text x="492.00" y="190.50">clear (visualizer/modelView.py:354)</text></g><g><title>clear (visualizer/modelView.py:355) (115 samples, 0.20%)</title><rect x="1135" y="180" width="3" height="15" fill="rgb(215,65,15)"/><text x="1138.00" y="190.50"></text></g><g><title>update (visualizer/modelView.py:380) (31,162 samples, 55.31%)</title><rect x="486" y="164" width="652" height="15" fill="rgb(243,77,42)"/><text x="489.00" y="174.50">update (visualizer/modelView.py:380)</text></g><g><title>update (visualizer/modelView.py:404) (65 samples, 0.12%)</title><rect x="1139" y="164" width="1" height="15" fill="rgb(220,164,15)"/><text x="1142.00" y="174.50"></text></g><g><title>set_rect (visualizer/visualizerGraphicItem.py:1091) (236 samples, 0.42%)</title><rect x="1144" y="180" width="5" height="15" fill="rgb(224,172,52)"/><text x="1147.00" y="190.50"></text></g><g><title>set_rect (visualizer/visualizerGraphicItem.py:1113) (262 samples, 0.47%)</title><rect x="1150" y="180" width="6" height="15" fill="rgb(211,113,30)"/><text x="1153.00" y="190.50"></text></g><g><title>set_rect (visualizer/visualizerGraphicItem.py:545) (75 samples, 0.13%)</title><rect x="1158" y="180" width="2" height="15" fill="rgb(226,179,3)"/><text x="1161.00" y="190.50"></text></g><g><title>set_rect (visualizer/visualizerGraphicItem.py:568) (88 samples, 0.16%)</title><rect x="1160" y="180" width="2" height="15" fill="rgb(253,130,2)"/><text x="1163.00" y="190.50"></text></g><g><title>set_rect (visualizer/visualizerGraphicItem.py:693) (85 samples, 0.15%)</title><rect x="1163" y="180" width="2" height="15" fill="rgb(210,53,24)"/><text x="1166.00" y="190.50"></text></g><g><title>set_rect (visualizer/visualizerGraphicItem.py:713) (103 samples, 0.18%)</title><rect x="1165" y="180" width="3" height="15" fill="rgb(205,212,15)"/><text x="1168.00" y="190.50"></text></g><g><title>update (visualizer/modelView.py:439) (1,209 samples, 2.15%)</title><rect x="1143" y="164" width="25" height="15" fill="rgb(218,69,10)"/><text x="1146.00" y="174.50">u..</text></g><g><title>determine_color (visualizer/visualizerGraphicItem.py:1692) (71 samples, 0.13%)</title><rect x="1168" y="180" width="2" height="15" fill="rgb(247,180,8)"/><text x="1171.00" y="190.50"></text></g><g><title>update (visualizer/modelView.py:440) (182 samples, 0.32%)</title><rect x="1168" y="164" width="4" height="15" fill="rgb(212,87,19)"/><text x="1171.00" y="174.50"></text></g><g><title>update (visualizer/modelView.py:471) (63 samples, 0.11%)</title><rect x="1172" y="164" width="1" height="15" fill="rgb(234,229,46)"/><text x="1175.00" y="174.50"></text></g><g><title>run (visualizer/control.py:479) (55,588 samples, 98.66%)</title><rect x="10" y="84" width="1164" height="15" fill="rgb(240,204,7)"/><text x="13.00" y="94.50">run (visualizer/control.py:479)</text></g><g><title>__init__ (visualizer/control.py:71) (55,588 samples, 98.66%)</title><rect x="10" y="100" width="1164" height="15" fill="rgb(210,161,45)"/><text x="13.00" y="110.50">__init__ (visualizer/control.py:71)</text></g><g><title>_init_gui (visualizer/control.py:174) (32,966 samples, 58.51%)</title><rect x="483" y="116" width="691" height="15" fill="rgb(231,30,25)"/><text x="486.00" y="126.50">_init_gui (visualizer/control.py:174)</text></g><g><title>resize_to_fit (visualizer/modelView.py:341) (32,966 samples, 58.51%)</title><rect x="483" y="132" width="691" height="15" fill="rgb(227,206,5)"/><text x="486.00" y="142.50">resize_to_fit (visualizer/modelView.py:341)</text></g><g><title>_scale (visualizer/modelView.py:313) (32,966 samples, 58.51%)</title><rect x="483" y="148" width="691" height="15" fill="rgb(210,27,43)"/><text x="486.00" y="158.50">_scale (visualizer/modelView.py:313)</text></g><g><title>update (visualizer/modelView.py:371) (67 samples, 0.12%)</title><rect x="1183" y="132" width="1" height="15" fill="rgb(206,108,37)"/><text x="1186.00" y="142.50"></text></g><g><title>update (visualizer/modelView.py:373) (52 samples, 0.09%)</title><rect x="1184" y="132" width="1" height="15" fill="rgb(233,17,28)"/><text x="1187.00" y="142.50"></text></g><g><title>clear (visualizer/modelView.py:354) (163 samples, 0.29%)</title><rect x="1185" y="148" width="4" height="15" fill="rgb(251,46,33)"/><text x="1188.00" y="158.50"></text></g><g><title>mouseReleaseEvent (visualizer/visualizerGraphicItem.py:964) (317 samples, 0.56%)</title><rect x="1182" y="100" width="7" height="15" fill="rgb(209,48,4)"/><text x="1185.00" y="110.50"></text></g><g><title>mouseReleaseEvent (visualizer/visualizerGraphicItem.py:474) (316 samples, 0.56%)</title><rect x="1182" y="116" width="7" height="15" fill="rgb(248,79,26)"/><text x="1185.00" y="126.50"></text></g><g><title>update (visualizer/modelView.py:380) (179 samples, 0.32%)</title><rect x="1185" y="132" width="4" height="15" fill="rgb(239,209,4)"/><text x="1188.00" y="142.50"></text></g><g><title>all (56,344 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(245,84,3)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (viz:19) (56,344 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(213,130,28)"/><text x="13.00" y="62.50">&lt;module&gt; (viz:19)</text></g><g><title>main (viz:16) (56,344 samples, 100.00%)</title><rect x="10" y="68" width="1180" height="15" fill="rgb(217,190,44)"/><text x="13.00" y="78.50">main (viz:16)</text></g><g><title>run (visualizer/control.py:480) (756 samples, 1.34%)</title><rect x="1174" y="84" width="16" height="15" fill="rgb(244,157,27)"/><text x="1177.00" y="94.50"></text></g></g></svg>